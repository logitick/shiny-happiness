//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
namespace RPS.Models
{
	public class TournamentHistory : Model
	{
		private int id;
		private int tournamentId;
		private int userId1;
		private int userId2;
		private int treeLevel;
		private DateTime created = DateTime.Now;

		public int Id {
			get {
				return this.id;
			}
			set {
				id = value;
			}
		}

		public int UserId1 {
			get {
				return this.userId1;
			}
			set {
				userId1 = value;
			}
		}

		public int UserId2 {
			get {
				return this.userId2;
			}
			set {
				userId2 = value;
			}
		}

		public int TreeLevel {
			get {
				return this.treeLevel;
			}
			set {
				treeLevel = value;
			}
		}

		public DateTime Created {
			get {
				return this.created;
			}
			set {
				created = value;
			}
		}

		public int TournamentId {
			get {
				return this.tournamentId;
			}
			set {
				tournamentId = value;
			}
		}

		public TournamentHistory() {

		}

		public TournamentHistory (int tournamentId, 
		                          int userId1, 
		                          int userId2, 
		                          int treeLevel)
		{
			this.tournamentId = tournamentId;
			this.userId1 = userId1;
			this.userId2 = userId2;
			this.treeLevel = treeLevel;
		}
		

		public override bool Update ()
		{
			throw new NotImplementedException ();
		}

		public override bool Insert ()
		{
			if (this.TournamentId > 0 &&
			    this.TreeLevel > 0 &&
			    (this.UserId1 > 0 ||
			    this.UserId2 > 0))
			{
				SimpleJSON.JSONNode historyData = SimpleJSON.JSON.Build();
				historyData["user_id1"].AsInt = this.UserId1;
				historyData["user_id2"].AsInt = this.UserId2;
				historyData["tree_level"].AsInt = this.TreeLevel;
				historyData["created"] = this.Created.ToString(new System.Globalization.DateTimeFormatInfo().RFC1123Pattern);
				this.PostHTTPData(Tournament.HTTP_FORM_KEY_INSERT, historyData);

				return true;
			}
			return false;
		}

		public override void ConvertToModel ()
		{
			throw new NotImplementedException ();
		}

		public override string getApiPath() {
			string path = "tournaments";
			this.AddApiPathFragment (this.TournamentId.ToString());
			this.AddApiPathFragment ("history");
			if (this.apiPathFragments != null) {
				foreach (string fragment in this.apiPathFragments) {
					path += "/"+fragment;
				}
			}
			return path;
		}

		public override string ToString ()
		{
			return string.Format ("[TournamentHistory: Id={0}, UserId1={1}, UserId2={2}, TreeLevel={3}, Created={4}, TournamentId={5}]", Id, UserId1, UserId2, TreeLevel, Created, TournamentId);
		}
	}
}

